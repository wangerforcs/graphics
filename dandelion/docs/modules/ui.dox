/*!
\~english
\defgroup ui UI
\brief Files, classes and some explanations about the GUI.

\~chinese
\defgroup ui UI 界面
\brief 与 GUI 相关的文件、类，以及一些设计思路和解释。

Dandelion 是一个轻量的应用，没有什么 I/O 压力。我们借鉴 MVC (Model-View-Controller) 的设计思路实现了程序的交互界面。之所以说“借鉴”而非“采用”，是因为 MVC 是 RMGUI（保留模式 GUI）的设计思想，而 Dandelion 使用的 Dear ImGui 界面库是一种 IMGUI（立即模式 GUI）。在标准的 MVC 设计思路中，一个控制器 (Controller) 负责处理所有的用户输入，并根据输入调用相应 UI 组件的响应函数；而 Dear ImGui 的所有 UI 组件都是各自响应输入的，开发者既不需要、也不能够看到这些组件的状态，自然也不能有处理所有输入的控制器。

然而对于 Dandelion 来说，可见内容并不只有 Dear ImGui 组件，还有预览（编辑）三维模型的场景。预览场景是直接使用 OpenGL 渲染的，并没有处理输入的能力，因此一个 `Controller` 对象将处理对预览场景的操作——例如旋转视角。这个对象也“持有”其他的 UI 组件并负责渲染它们，与 UI 无关的部分统一通过 `Controller` 对象与 UI 组件交互，所以会被命名为“控制器”。
*/